{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getStringTimeFromDate","date","toUTCString","slice","Clock","state","today","Date","clockTimerId","this","window","setInterval","newToday","console","info","setState","prevProps","name","props","debug","clearInterval","clockName","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleContextMenuEvent","event","preventDefault","handleClickEvent","document","addEventListener","removeEventListener","React","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,EAAsBC,GAC7B,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,aAAe,EALjB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,IAAMC,EAAW,IAAIL,KAErBG,OAAOG,QAAQC,KAAKd,EAAsBY,IAE1C,EAAKG,SAAS,CACZT,MAAOM,MAER,OAhBP,gCAmBE,SAAmBI,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAChCP,OAAOG,QAAQM,MAAf,uBAAqCH,EAAUC,KAA/C,eAA0DR,KAAKS,MAAMD,SArB3E,kCAyBE,WACEP,OAAOU,cAAcX,KAAKD,gBA1B9B,oBA6BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACMe,EAAcZ,KAAKS,MAAzBD,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAGF,YAED,sBAAMC,UAAU,cAAhB,SACGtB,EAAsBM,YA1CjC,GAA2BiB,aCV3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWxB,OAAO,GAE3C,MAAM,SAAN,OAAgBsB,GAWX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVR,UAAW,WAHf,EAMES,QAAU,EANZ,EA0BEC,uBAAyB,SAACC,GACxBA,EAAMC,iBAEN,EAAKlB,SAAS,CACZc,UAAU,KA9BhB,EAkCEK,iBAAmB,WACjB,EAAKnB,SAAS,CACZc,UAAU,KApChB,uDAQE,WAAqB,IAAD,OAClBpB,KAAKqB,QAAUpB,OAAOC,aAAY,WAChC,EAAKI,SAAS,CACZM,UAAWG,QAEZ,MAEHW,SAASC,iBAAiB,cAAe3B,KAAKsB,wBAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,oBAhB5C,kCAmBE,WACExB,OAAOU,cAAcX,KAAKqB,SAE1BK,SAASE,oBAAoB,cAAe5B,KAAKsB,wBACjDI,SAASE,oBAAoB,QAAS5B,KAAKyB,oBAvB/C,oBAwCE,WACE,IAAQL,EAAapB,KAAKJ,MAAlBwB,SAER,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOZ,KAAMR,KAAKJ,MAAMgB,mBA9C7C,GAAyBiB,IAAMf,WCf/BgB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.3db7df53.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nfunction getStringTimeFromDate(date: Date) {\n  return date.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  clockTimerId = 0;\n\n  componentDidMount() {\n    this.clockTimerId = window.setInterval(() => {\n      const newToday = new Date();\n\n      window.console.info(getStringTimeFromDate(newToday));\n\n      this.setState({\n        today: newToday,\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      window.console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.clockTimerId);\n  }\n\n  render(): ReactNode {\n    const { today } = this.state;\n    const { name: clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {getStringTimeFromDate(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\ntype Props = {\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenuEvent);\n    document.addEventListener('click', this.handleClickEvent);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handleContextMenuEvent);\n    document.removeEventListener('click', this.handleClickEvent);\n  }\n\n  handleContextMenuEvent = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  handleClickEvent = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}