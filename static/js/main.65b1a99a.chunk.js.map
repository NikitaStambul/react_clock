{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","clockTimerId","this","window","setInterval","newToday","getTime","console","info","toUTCString","slice","setState","prevProps","name","props","debug","clearInterval","clockName","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleContextMenuEvent","event","preventDefault","handleClickEvent","document","addEventListener","removeEventListener","React","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,aAAe,EALjB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,IAAQL,EAAU,EAAKD,MAAfC,MACFM,EAAW,IAAIL,KAAKD,EAAMO,UAAY,KAG5CC,QAAQC,KAAKH,EAASI,cAAcC,OAAO,IAAK,IAEhD,EAAKC,SAAS,CACZZ,MAAOM,MAER,OAlBP,gCAqBE,SAAmBO,GACbA,EAAUC,OAASX,KAAKY,MAAMD,MAEhCN,QAAQQ,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDX,KAAKY,MAAMD,SAxBpE,kCA4BE,WACEV,OAAOa,cAAcd,KAAKD,gBA7B9B,oBAgCE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACMkB,EAAcf,KAAKY,MAAzBD,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGD,IAGF,YAED,sBAAMC,UAAU,cAAhB,SACGnB,EAAMU,cAAcC,OAAO,IAAK,YA7C3C,GAA2BS,aCN3B,SAASC,IACP,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAWX,IAAMG,EAAb,4MACE1B,MAAQ,CACN2B,UAAU,EACVR,UAAW,WAHf,EAMES,QAAU,EANZ,EA0BEC,uBAAyB,SAACC,GACxBA,EAAMC,iBAEN,EAAKlB,SAAS,CACZc,UAAU,KA9BhB,EAkCEK,iBAAmB,SAACF,GAClBA,EAAMC,iBAEN,EAAKlB,SAAS,CACZc,UAAU,KAtChB,uDAQE,WAAqB,IAAD,OAClBvB,KAAKwB,QAAUvB,OAAOC,aAAY,WAChC,EAAKO,SAAS,CACZM,UAAWG,QAEZ,MAEHW,SAASC,iBAAiB,cAAe9B,KAAKyB,wBAC9CI,SAASC,iBAAiB,QAAS9B,KAAK4B,oBAhB5C,kCAmBE,WACE3B,OAAOa,cAAcd,KAAKwB,SAE1BK,SAASE,oBAAoB,cAAe/B,KAAKyB,wBACjDI,SAASE,oBAAoB,QAAS/B,KAAK4B,oBAvB/C,oBA0CE,WACE,IAAQL,EAAavB,KAAKJ,MAAlB2B,SAER,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GAAY,cAAC,EAAD,CAAOZ,KAAMX,KAAKJ,MAAMmB,mBAhD7C,GAAyBiB,IAAMf,WCf/BgB,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.65b1a99a.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  clockTimerId = 0;\n\n  componentDidMount() {\n    this.clockTimerId = window.setInterval(() => {\n      const { today } = this.state;\n      const newToday = new Date(today.getTime() + 1000);\n\n      // eslint-disable-next-line no-console\n      console.info(newToday.toUTCString().slice(-12, -4));\n\n      this.setState({\n        today: newToday,\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.clockTimerId);\n  }\n\n  render(): ReactNode {\n    const { today } = this.state;\n    const { name: clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\ntype Props = {\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenuEvent);\n    document.addEventListener('click', this.handleClickEvent);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.handleContextMenuEvent);\n    document.removeEventListener('click', this.handleClickEvent);\n  }\n\n  handleContextMenuEvent = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  handleClickEvent = (event: Event) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}